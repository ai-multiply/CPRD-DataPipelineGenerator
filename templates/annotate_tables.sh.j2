#!/bin/bash
#$ -cwd
#$ -j y
#$ -pe smp 1
#$ -l h_rt={{ grid_engine.runtime }}
#$ -l h_vmem={{ grid_engine.memory }}
#$ -t 1-{{ tables_to_process|length }}

# Ensure script fails on error
set -e

# Load required modules
module load parallel

# Activate conda environment (required for each parallel process)
export MAMBA_ACTIVATION="module load miniconda; mamba activate cprdpipeline; cd {{ scripts_dir }}"

scripts_folder={{ scripts_dir }}

# Get table name from filelist
TABLE_NAME=$(sed -n "${SGE_TASK_ID}p" {{ filelist_path }})
echo "Processing $TABLE_NAME" $(date)

cd {{ processed_data_folder }}/$TABLE_NAME

# Get current table configuration and process it
{% if table_configs %}
{% for table_name, config in table_configs.items() %}
# Annotate with codelists
{% for col_name, codelist_file in config['codelists'].items() %}
echo "Annotating {{ col_name }} with codelist" $(date)

head -n1 s03_{{ table_name }}.txt | awk 'BEGIN{RS="\r?\n"; FS=OFS="\t"} { print $0, "term", "ltc", "count" }' > header_{{ col_name }}.txt

awk_program='BEGIN{RS="\r?\n"; FS=OFS="\t"} FNR==NR{term[$1]=$2;ltc[$1]=$3;count[$1]=$4;next} {print $0, term[${{ config['positions'][col_name] }}], ltc[${{ config['positions'][col_name] }}], count[${{ config['positions'][col_name] }}]}'

# Calculate the column number for splitting (term column is second to last in output)
NCOLS=$(head -n1 s03_{{ table_name }}.txt | awk -F'\t' '{print NF}')
SPLIT_COL=$((NCOLS + 1))  # Add 2 for the new columns before term

# Use parallel with proper environment activation for each process
tail -n +2 s03_{{ table_name }}.txt > tmp_{{ table_name }}.txt
parallel  --pipepart -a tmp_{{ table_name }}.txt \
    "$MAMBA_ACTIVATION; \
    awk '$awk_program' {{ codelist_file }} - >  {{ processed_data_folder }}/$TABLE_NAME/part_{{ col_name }}_{% raw %}{#}{% endraw %}.txt; \
    python $scripts_folder/split_rows.py $USER  {{ processed_data_folder }}/$TABLE_NAME/part_{{ col_name }}_{% raw %}{#}{% endraw %}.txt $SPLIT_COL"

cat header_{{ col_name }}.txt > annotated_{{ table_name }}.txt
cat part_{{ col_name }}_*.split >> annotated_{{ table_name }}.txt

rm header_{{ col_name }}.txt tmp_{{ table_name }}.txt part_{{ col_name }}_*.txt part_{{ col_name }}_*.split
{% endfor %}

mv annotated_*.txt s04_{{ table_name }}.txt
{% endfor %}
{% endif %}

echo "Finished table_name" $(date)